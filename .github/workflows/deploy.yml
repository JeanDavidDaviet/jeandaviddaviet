name: deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "actions" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  web-deploy:
    name: ðŸŽ‰ Deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-versions: [ '18' ]
    steps:
    - name: ðŸšš Get latest code
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-versions }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-versions }}

    - name: Get npm cache directory
      id: npm-cache-dir
      run: |
        echo "::set-output name=dir::$(npm config get cache)"

    - uses: actions/cache@v3
      id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.node-versions }}

    - name: Build
      run: |
        npm ci
        npm run prod
    
    - name: ðŸ“‚ Sync files
      uses: SamKirkland/FTP-Deploy-Action@4.3.0
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USER }}
        password: ${{ secrets.FTP_PASS }}
        server-dir: ./www/wp-content/themes/jdd4/

